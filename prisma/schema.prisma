// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Adjust according to your database
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  username          String    @unique
  password          String
  role              UserRole
  last_logged_in    DateTime?
  verified          Boolean   @default(false)
  verification_code String?
  created_at        DateTime?  @default(now())
  updated_at        DateTime?  @updatedAt

  vendor     Vendor?
  contractor Contractor?
  warehouse  Warehouse?
  backend    Backend?
}

model Vendor {
  id           Int    @id @default(autoincrement())
  user         User   @relation(fields: [user_id], references: [id])
  user_id      Int    @unique
  company_name String
  phone        String
  email        String
  address      String
  pin          String
  state        State  @relation(fields: [stateId], references: [id])
  stateId      Int
  district     String
  city         City   @relation(fields: [cityId], references: [id])
  cityId       Int
  pan          String
  gst          String
  licence      String
}

model Contractor {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [user_id], references: [id])
  user_id      Int      @unique
  name         String
  company_name String
  phone        String
  email        String
  licence      String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Warehouse {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [user_id], references: [id])
  user_id       Int      @unique
  name          String
  location      String
  incharge_name String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Backend {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int      @unique
  name       String
  email      String
  phone      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Country {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  states State[]
}

model State {
  id        Int      @id @default(autoincrement())
  name      String
  country   Country  @relation(fields: [countryId], references: [id])
  countryId Int
  cities    City[]
  Vendor    Vendor[]
}

model City {
  id      Int      @id @default(autoincrement())
  name    String
  state   State    @relation(fields: [stateId], references: [id])
  stateId Int
  Vendor  Vendor[]
}

enum UserRole {
  VENDOR
  CONTRACTOR
  WAREHOUSE
  BACKEND
}
